{"version":3,"sources":["my_2048/core.cljs"],"mappings":";;AAOA,AAAKA,oBACH,wBAAA,xBAAiBC;AAEnB,AAAKC,yBACH,iBAAMC,IAAE,AAAcC;IAChBC,IAAE,AAAeD;AADvB,AAEE,QAAA,MAAO,iBAAAE,kBAAKH;IAALI,kBAAOF;AAAP,AAAA,SAAAC,kBAAAC,mBAAAD,kBAAAC;;;AAEX,AAAKC,yBACH,sBAAA,WAAAC,hBAAME;AAAN,AAAU,QAAAF,mBAAA;;SAAV,WAAAC,hBACME;AADN,AACU,QAAAF,mBAAA;;AADV,AAEE,UAAA,GAAI,AAASV,HAAMW,HAAGC;;AAE1B,AAAKC,0BACH,6BAAA,7BAAab;AAEf,2BAAA,3BAAMc,8DAAaC;AAAnB,AACE,AAACC,2BAAehB;;mOACXe,9BACDE,tHACA,sHAAA,tHAACC,4CAAIC,eAAK,kDAAA,IAAA,tDAACC,2BAAeZ,rKAC1B,OAACa,yBAAaR,wBAAWL;;AAE/B,AAAKc,0BACH,AAACC,6CAAK,AAACC;AAET,kCAAA,lCAAMC,4EAAeC;AAArB,AACM,YAAA,WAAAC,nBACEC;AADF,AACS,gCAAAD,zBAACE,0CAAiBH;;AAD3B,AAEE,oBAAI,iBAAAI,oBACEJ;AADF,AAAA,oBAAAI;AAEE,2FAAMR,nDACJ,mCAAA,AAAAS,nCAACC,yBAAcN,1DACfO;;AAJJH;;;AAKF,OAACI,mDAAMZ,wBAAWM;;AALpB;;;AAOR,oBAAA,pBAAMO;AAAN,AACC,AACC,AAAY,AAACC,qCAAkBX;;AAC/B,AAAY,AAACY,yBAAiBpC,oBAAawB;;AAG3C,4CAAA,6DAAA,WAAAa,iBAAAC,iBAAAC,iBAAAC,vKAACC,oBAAUpB;AAAX,AACG,gCAAAmB,zBAAC3B;;;AAEJ,4CAAA,mEAAA,WAAA6B,iBAAAC,iBAAAC,iBAAAC,7KAACJ,oBAAUpB;AAAX,AACG,iBAAAwB,bAAM/B;AAAN,AACG,oBACE,AAACgC,wBAAOhC;AACN,aAAA,NAACiC;;AAFL,GAGE,AAACC,yBAAQlC;AACP,aAAA,NAACiC;;AAJL;;;;;AAMN,gCAAA,AAAAjB,zBAACjB,yCAAaQ","names":["my-2048.core/game","js/document","my-2048.core/grid-size","w","js/window","h","x__5133__auto__","y__5134__auto__","my-2048.core/tile-size","p1__12193#","p1__12194#","f1","f2","my-2048.core/background","my-2048.core/render-game","game-state","my-2048.utils/clear-canvas","my-2048.game/matrix-to-vector","cljs.core.map","cljs.core/list","my-2048.utils/get-vertexes","my-2048.utils/draw-field","my-2048.core/game-state","cljs.core.atom","my-2048.game/init-state","my-2048.core/update-field!","direction","p1__12195#","shift","my-2048.game/update-grid","and__5043__auto__","cljs.core/deref","my-2048.game/rotate-grid","my-2048.game/grid-movable?","cljs.core.swap_BANG_","my-2048.core/main","my-2048.swipe/arrowSwipe","my-2048.swipe/touchSwipe","p1__12197#","p2__12198#","p3__12199#","p4__12196#","cljs.core/add-watch","p1__12201#","p2__12202#","p3__12203#","p4__12200#","my-2048.game/win?","js/alert","my-2048.game/lose?"],"sourcesContent":["(ns my-2048.core\n  (:require [my-2048.utils :as u]\n    [my-2048.game :as g]\n    [rxjs :as rx]\n    [my-2048.swipe :as swipe]\n    ))\n\n(def game \n  (.getElementById js/document \"game\"))\n\n(def grid-size\n  (let [w (.-innerWidth js/window)\n        h (.-innerHeight js/window)]\n    (* 0.8 (min w h))))\n\n(def tile-size\n  (let [f1 #(- %1 9)\n        f2 #(/ %1 4)]\n    (-> (.-width game) f1 f2)))\n\n(def background \n  (.getContext game \"2d\"))\n\n(defn render-game [game-state]\n  (u/clear-canvas game)\n  (->> game-state\n      g/matrix-to-vector\n      (map list (u/get-vertexes tile-size 4 3))\n      (u/draw-field background tile-size)))\n\n(def game-state\n  (atom (g/init-state)))\n\n(defn update-field! [direction] \n      (let [\n        shift #(g/update-grid %1 direction)]\n        (if (and \n              direction \n              (->> @game-state\n                (g/rotate-grid direction)\n                g/grid-movable? ))\n          (swap! game-state shift))))\n\n(defn main []\n (do \n  (.subscribe (swipe/arrowSwipe) update-field!)\n  (.subscribe (swipe/touchSwipe js/document) update-field!)\n  ;; (.subscribe (swipe/touchSwipe game) update-field!)\n\n  (add-watch game-state :updating\n    #(render-game %4))\n\n  (add-watch game-state :game-ending\n    #(let [game-state %4]\n        (cond \n          (g/win? game-state)\n            (js/alert \"You won!\")\n          (g/lose? game-state)\n            (js/alert \"You lost!\"))))\n  \n  (render-game @game-state)))\n"]}