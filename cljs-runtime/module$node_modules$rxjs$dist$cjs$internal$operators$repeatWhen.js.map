{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$repeatWhen.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE5HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAC1B,KAAIC,UAAYP,OAAA,CAAQ,oDAAR,CAAhB,CACIQ,OAASR,OAAA,CAAQ,sDAAR,CADb,CAEIS,qBAAuBT,OAAA,CAAQ,yEAAR,CA0C3BE,QAAQI,CAAAA,UAAR,CAzCAA,QAAmB,CAACI,QAAD,CAAW,CAC1B,MAAOF,OAAOG,CAAAA,OAAP,CAAe,QAAS,CAACC,MAAD;AAASC,UAAT,CAAqB,CAChD,IAAIC,QAAJ,CACIC,UAAY,CAAA,CADhB,CAEIC,YAFJ,CAGIC,mBAAqB,CAAA,CAHzB,CAIIC,eAAiB,CAAA,CAJrB,CAMIC,qBAAuBA,QAAS,EAAG,CAC9BH,YAAL,GACIA,YACA,CADe,IAAIT,SAAUa,CAAAA,OAC7B,CAAAV,QAAA,CAASM,YAAT,CAAuBK,CAAAA,SAAvB,CAAiCZ,oBAAqBa,CAAAA,wBAArB,CAA8CT,UAA9C,CAA0D,QAAS,EAAG,CAC/FC,QAAJ,CACIS,sBAAA,EADJ,CAIIR,SAJJ,CAIgB,CAAA,CALmF,CAAtE,CAO9B,QAAS,EAAG,CACXE,kBAAA,CAAqB,CAAA,CAZQC,eAa7B,EAb+CD,kBAa/C,EAbsEJ,UAAWW,CAAAA,QAAX,EAW3D,CAPkB,CAAjC,CAFJ,CAcA,OAAOR,aAf4B,CANvC,CAuBIO,uBAAyBA,QAAS,EAAG,CACrCL,cAAA,CAAiB,CAAA,CACjBJ,SAAA,CAAWF,MAAOS,CAAAA,SAAP,CAAiBZ,oBAAqBa,CAAAA,wBAArB,CAA8CT,UAA9C;AAA0DY,IAAAA,EAA1D,CAAqE,QAAS,EAAG,CAEzG,CADAP,cArBiC,CAqBhB,CAAA,CArBgB,CAAkBD,kBAsBnD,IAtB0EJ,UAAWW,CAAAA,QAAX,EAAA,CAAuB,CAAA,CAsBjG,GAAoBL,oBAAA,EAAuBO,CAAAA,IAAvB,EAFqF,CAAjF,CAAjB,CAIPX,UAAJ,GACID,QAASa,CAAAA,WAAT,EAGA,CAFAb,QAEA,CAFW,IAEX,CADAC,SACA,CADY,CAAA,CACZ,CAAAQ,sBAAA,EAJJ,CANqC,CAazCA,uBAAA,EArCgD,CAA7C,CADmB,CAP8F;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/repeatWhen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$repeatWhen\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.repeatWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction repeatWhen(notifier) {\n    return lift_1.operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var completions$;\n        var isNotifierComplete = false;\n        var isMainComplete = false;\n        var checkComplete = function () { return isMainComplete && isNotifierComplete && (subscriber.complete(), true); };\n        var getCompletionSubject = function () {\n            if (!completions$) {\n                completions$ = new Subject_1.Subject();\n                notifier(completions$).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {\n                    if (innerSub) {\n                        subscribeForRepeatWhen();\n                    }\n                    else {\n                        syncResub = true;\n                    }\n                }, function () {\n                    isNotifierComplete = true;\n                    checkComplete();\n                }));\n            }\n            return completions$;\n        };\n        var subscribeForRepeatWhen = function () {\n            isMainComplete = false;\n            innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {\n                isMainComplete = true;\n                !checkComplete() && getCompletionSubject().next();\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRepeatWhen();\n            }\n        };\n        subscribeForRepeatWhen();\n    });\n}\nexports.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","repeatWhen","Subject_1","lift_1","OperatorSubscriber_1","notifier","operate","source","subscriber","innerSub","syncResub","completions$","isNotifierComplete","isMainComplete","getCompletionSubject","Subject","subscribe","createOperatorSubscriber","subscribeForRepeatWhen","complete","undefined","next","unsubscribe"]
}
