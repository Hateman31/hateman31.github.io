shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$race=function(global,require,module,exports){function raceInit(sources){return function(subscriber){for(var subscriptions=[],_loop_1=function(i){subscriptions.push(innerFrom_1.innerFrom(sources[i]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber,function(value){if(subscriptions){for(var s=0;s<subscriptions.length;s++)s!==i&&subscriptions[s].unsubscribe();subscriptions=null}subscriber.next(value)})))},i$jscomp$0=
0;subscriptions&&!subscriber.closed&&i$jscomp$0<sources.length;i$jscomp$0++)_loop_1(i$jscomp$0)}}Object.defineProperty(exports,"__esModule",{value:!0});exports.raceInit=exports.race=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),innerFrom_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$innerFrom"),argsOrArgArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$argsOrArgArray"),OperatorSubscriber_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$OperatorSubscriber");
exports.race=function(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=arguments[_i];sources=argsOrArgArray_1.argsOrArgArray(sources);return 1===sources.length?innerFrom_1.innerFrom(sources[0]):new Observable_1.Observable(raceInit(sources))};exports.raceInit=raceInit}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$race.js.map
